language: android

env:
#  matrix:
#    - TEST=unit
#    - TEST=android ANDROID_TARGET=android-19 ANDROID_ABI=armeabi-v7a
  global:
   # install timeout in minutes (2 minutes by default)
    - ADB_INSTALL_TIMEOUT=8
    - QEMU_AUDIO_DRV=none

stages:
    - build
    - name: emulatorTests
      if: branch = master
    - quality

jobs:
  include:
    - stage: build
      install: true
      script:
        - ./gradlew clean
        - ./gradlew build
      before_script:
        # Accept licenses
        - mkdir -p $ANDROID_HOME/licenses
        - echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
        - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
        - rm -fr .gradle/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - $HOME/.android/build-cache
          - .gradle
          - app/build/jacoco

    - stage: emulatorTests
      android:
        components:
          - tools
          - platform-tools
          - tools
          # The BuildTools version used by your project
          - build-tools-24.0.1
          # The SDK version used to compile your project
          - android-24
          - extra-android-support
          - extra-google-m2repository
          - extra-android-m2repository
          - addon-google_apis-google-24
          # Emulator image
          - sys-img-armeabi-v7a-android-24
          - sys-img-armeabi-v7a-google_apis-google-23
          - sys-img-x86_64-google_apis-google-23

        licenses:
          - android-sdk-preview-license-.+
          - android-sdk-license-.+
          - google-gdk-license-.+
      install: true
      before_script:
        # Accept licenses
        - mkdir -p $ANDROID_HOME/licenses
        - echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
        - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
        # Start Emulator
        - echo no | android create avd --force --name test -t android-24 --abi armeabi-v7a
        - emulator -avd test -no-skin -no-audio -no-window -engine classic &
        - android-wait-for-emulator
        - adb shell input keyevent 82 &
      script:
        - ./gradlew connectedFullDebugAndroidTest
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - $HOME/.android/build-cache
          - .gradle
          - app/build/jacoco
          - app/build/reports
          - app/build/outputs/code-coverage

    - stage: quality
      install: true
      addons:
  	sonarcloud:
    	  organization: "association-aura" 
          token:
            secure: "L+nCWrIEghK9OOC6xra2WtfTlkqu8dSyvU+ItNq0th3E27IB3AMezMkt4V/LlrRmlYs0r8D7EyBNI0RNKHimckfnV0A2ajB86CoBemNccCr0HyNz0j6CvuB/OeUmuoKdMkKqIccec0Rq3De6qoRnJjbfYdqJwiP30qzPVpydQnu/EvZXZ8elxdnG10oJuzQ/atlIfO21kn7BgYiRl5dmf9HNTAAQYCPiaC8Q2UQ70FjAfubYHGnOlfmSpx9rj2S2U5RjZTqwu7eAT/T7gzSp/oh4QHJAr7V2uylGxhn0F2j87sk/pR0WIQ/zvbc/mAmpUOINfoBdQ6QZ7UCNdWpnsO18XPfUd5XjOdmoe4LaWfIROV3w427oQrfB0x2bdplmdj1IxgjKDozNax/vccKJiLyQWv0ki52gHpiL3KqLnkA1duL5uQLvuS5uTCk2xjQIuWZY3skOKknjC3tEtKm5DzRAw39NZ9MupLSoh2HbWvjRBPfaScD3lTK88rsXIcvd0Y3SQQz+DWZwvPLOXscKVaxRjtyEqkuPYIGMgv+vFiC2/Bm24USPFHXNhFT/R/VZLV6AT8kuc+bQISJSTZJOOzAv7yX0sZslzq0D/tKUoSPEbvkdtbT2AzIIfnPNSADj4pYXUUixjJ1lv+i1qEKmyvyy3pIUOPLildr5on0IuXQ="

      before_script:
        # Accept licenses
        - mkdir -p $ANDROID_HOME/licenses
        - echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
        - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
      script:
        - ./gradlew jacocoTestReport
        - sonar-scanner

      cache:
        directories:
          - .gradle
          - app/build/jacoco
          - app/build/reports
          - app/build/outputs/code-coverage

      after_success:
        - bash <(curl -s https://codecov.io/bash)
