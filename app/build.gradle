buildscript {
    ext {
        androidVersion = "25.3.1"
    }
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://maven.google.com' }
    }

    dependencies {
        /* add asm 6.0 as a workaround to support jacoco and fabric simultaneously
         see issue https://github.com/jacoco/jacoco/issues/639*/
        classpath 'org.ow2.asm:asm:6.0'
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'project-report'
apply plugin: 'io.fabric'
apply plugin: 'jacoco'


jacoco {
    toolVersion = '0.8.1'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.google.com' }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile 'com.facebook.conceal:conceal:2.0.1@aar'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support:multidex:1.0.2'
    compile "com.android.support:support-v4:${androidVersion}"
    compile "com.android.support:design:${androidVersion}"
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    compile 'com.github.pwittchen:reactivewifi:0.2.0'
    compile 'com.amazonaws:aws-android-sdk-core:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-ddb:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-ddb-mapper:2.2.+'
    compile 'org.influxdb:influxdb-java:2.4'
    compile 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.3.2'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.jjoe64:graphview:4.2.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true;
    }
    compile 'com.github.florent37:singledateandtimepicker:1.2.2'
    compile 'lib.kingja.switchbutton:switchbutton:1.1.3'
    compileOnly 'org.projectlombok:lombok:1.16.20'
    annotationProcessor 'org.projectlombok:lombok:1.16.20'
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.8.4'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
}


android {
    signingConfigs {
        config {
            storeFile file('/home/lecoucl/Android/keystores/android.jks')
        }
    }
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 11
        versionName '2.9'
        resConfigs "en", "fr"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        // Weird reference
        main.java.srcDirs += 'src/main/lib/sweetblue/src'
        main.res.srcDirs += 'src/main/lib/sweetblue/res'

        androidTest.setRoot('src/androidTest')
        androidTest {
            java {
                srcDirs 'src/androidTest/java'
            }
        }
    }
    // workaround for "duplicate files during packaging of APK" issue
// see https://groups.google.com/d/msg/adt-dev/bl5Rc4Szpzg/wC8cylTWuIEJ
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    flavorDimensions "mode"

    productFlavors {
        full{
            dimension "mode"
        }
        stub{
            dimension "mode"
            applicationIdSuffix ".stub"
            versionNameSuffix "-stub"
        }
    }
    lintOptions {
        warning 'InvalidPackage' // Nasty workaround - cause is a non android package (java.lang.management) referenced by org.junit.internal.runners.statements.FailOnTimeout
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testFullDebugUnitTest', 'createFullDebugCoverageReport']) {

        reports {
            xml.enabled = true
            html.enabled = true
        }

        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', 'com/idevicesinc/sweetblue/*', 'com/idevicesinc/sweetblue/**/*']
        def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/full/debug", excludes: fileFilter)
        def mainSrc = ["$project.projectDir/src/main/java", "$project.projectDir/src/full/java"]

        sourceDirectories = files([mainSrc])
        classDirectories = files([debugTree])
        executionData = fileTree(dir: project.buildDir, includes: [
                'jacoco/testFullDebugUnitTest.exec', 'outputs/code-coverage/connected/**/*coverage.ec'
        ])
    }
}
